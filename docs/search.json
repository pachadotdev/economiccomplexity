[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"/articles/economiccomplexity.html","id":"world-trade-and-per-capita-gdp","dir":"Articles","previous_headings":"","what":"World Trade and Per-Capita GDP","title":"How To Use This Package","text":"","code":"library(economiccomplexity)  # partial view of trade matrix head(world_trade_avg_1998_to_2000) ##   country product value ## 1     afg    0011 30068 ## 2     afg    0012 16366 ## 3     afg    0111 19273 ## 4     afg    0112   893 ## 5     afg    0113   350 ## 6     afg    0116  1561 # partial view of gdp vector head(world_gdp_avg_1998_to_2000) ##   country value ## 1     abw 19185 ## 2     ago  1540 ## 3     alb  1433 ## 4     and 27765 ## 5     arb  3312 ## 6     are 43082"},{"path":"/articles/economiccomplexity.html","id":"balassa-index","dir":"Articles","previous_headings":"","what":"Balassa Index","title":"How To Use This Package","text":"can obtain Balassa Index balassa_index(). Another possibility obtain Balassa Index without discretization.","code":"bi <- balassa_index(world_trade_avg_1998_to_2000)  # partial view of index n <- seq_len(5) bi[n, n] ##     0011 0012 0013 0014 0015 ## afg    0    0    0    0    0 ## ago    0    0    0    0    0 ## aia    0    0    0    0    0 ## alb    0    0    0    0    0 ## and    1    0    0    0    1 bi_dec <- balassa_index(world_trade_avg_1998_to_2000, discrete = FALSE)  # partial view of index bi_dec[n, n] ##          0011        0012        0013       0014        0015 ## afg 0.2312238 0.285438688 0.000000000 0.00000000 0.000000000 ## ago 0.1777917 0.087436319 0.002076625 0.00139056 0.001106041 ## aia 0.0000000 0.002581853 0.000000000 0.00000000 0.000000000 ## alb 0.0000000 0.000000000 0.000000000 0.01582754 0.073011368 ## and 2.4825815 0.550954168 0.000000000 0.48208017 3.815013019"},{"path":"/articles/economiccomplexity.html","id":"complexity-measures","dir":"Articles","previous_headings":"","what":"Complexity Measures","title":"How To Use This Package","text":"can compute complexity indexes (e.g. Economic Complexity Index Product Complexity Index) using complexity_measures(). calculations methods fitness (default), reflections, eigenvalues. See (Mariani et al. 2015) methodological details. eigenvalues also calls reflections methods order correct index sign special cases correlation output methods negative.","code":""},{"path":"/articles/economiccomplexity.html","id":"complexity-fitness","dir":"Articles","previous_headings":"Complexity Measures","what":"Complexity-Fitness","title":"How To Use This Package","text":"","code":"com_fit <- complexity_measures(bi)  # partial view of indexes com_fit$complexity_index_country[n] ##        afg        ago        aia        alb        and  ## 0.78605655 0.03999516 1.05645538 1.24261128 1.37321261 com_fit$complexity_index_product[n] ##      0011      0012      0013      0014      0015  ## 0.7538883 0.7491391 2.3018690 0.9903918 1.3120378"},{"path":"/articles/economiccomplexity.html","id":"reflections","dir":"Articles","previous_headings":"Complexity Measures","what":"Reflections","title":"How To Use This Package","text":"","code":"com_ref <- complexity_measures(bi, method = \"reflections\")  # partial view of indexes com_ref$complexity_index_country[n] ##        afg        ago        aia        alb        and  ## -0.5788151 -1.7710696  1.4074821 -0.1754989  1.0738736 com_ref$complexity_index_product[n] ##        0011        0012        0013        0014        0015  ## -0.66255100 -1.62169896 -0.07449482  0.20554725  0.15848849"},{"path":"/articles/economiccomplexity.html","id":"eigenvalues","dir":"Articles","previous_headings":"Complexity Measures","what":"Eigenvalues","title":"How To Use This Package","text":"","code":"com_eig <- complexity_measures(bi, method = \"eigenvalues\")  # partial view of indexes com_eig$complexity_index_country[n] ##        afg        ago        aia        alb        and  ## -0.5764283 -1.7770752  1.4090414 -0.1732606  1.0772452 com_eig$complexity_index_product[n] ##        0011        0012        0013        0014        0015  ## -0.66657613 -1.62657599 -0.08149436  0.19917280  0.14935653"},{"path":"/articles/economiccomplexity.html","id":"proximity","dir":"Articles","previous_headings":"","what":"Proximity","title":"How To Use This Package","text":"Proximity matrices used create projections e.g. (country-country product-product networks) bipartite networks. Using proximity() straightforward.","code":"pro <- proximity(bi)  # partial view of proximity matrices pro$proximity_country[n, n] ##            afg         ago         aia        alb         and ## afg 1.00000000 0.015873016 0.181818182 0.19689119 0.192513369 ## ago 0.01587302 1.000000000 0.006993007 0.01554404 0.005347594 ## aia 0.18181818 0.006993007 1.000000000 0.16580311 0.251336898 ## alb 0.19689119 0.015544041 0.165803109 1.00000000 0.310880829 ## and 0.19251337 0.005347594 0.251336898 0.31088083 1.000000000 pro$proximity_product[n, n] ##           0011      0012      0013      0014      0015 ## 0011 1.0000000 0.3658537 0.1707317 0.2439024 0.2682927 ## 0012 0.3658537 1.0000000 0.2500000 0.2250000 0.2500000 ## 0013 0.1707317 0.2500000 1.0000000 0.2500000 0.1200000 ## 0014 0.2439024 0.2250000 0.2500000 1.0000000 0.2250000 ## 0015 0.2682927 0.2500000 0.1200000 0.2250000 1.0000000"},{"path":"/articles/economiccomplexity.html","id":"projections","dir":"Articles","previous_headings":"","what":"Projections","title":"How To Use This Package","text":"projections() function designed use igraph internal computations also pass proximity-based networks igraph, ggraph export Cytoscape saving output csv/tsv. can also use igraph see many edges networks nd also networks’ density, diameter transitivity.","code":"library(igraph)  net <- projections(pro$proximity_country, pro$proximity_product)  # partial view of projections E(net$network_country)[n] ## + 5/484 edges from 9b37171 (vertex names): ## [1] zaf--zwe tza--zmb tza--uga tuv--wlf tuv--umi E(net$network_product)[n] ## + 5/1505 edges from 07a2194 (vertex names): ## [1] 8981--8982 8946--9510 8922--8932 8921--8922 8852--8959 ecount(net$network_country) ## [1] 484 ecount(net$network_product) ## [1] 1505 edge_density(net$network_country, loops = FALSE) ## [1] 0.01903638 edge_density(net$network_product, loops = FALSE) ## [1] 0.00489081 diameter(net$network_country, directed = FALSE, unconnected = FALSE) ## [1] 7.845477 diameter(net$network_product, directed = FALSE, unconnected = FALSE) ## [1] 12.78569 transitivity(net$network_country, type = \"global\") ## [1] 0.6151159 transitivity(net$network_product, type = \"global\") ## [1] 0.4457284"},{"path":"/articles/economiccomplexity.html","id":"centrality-measures","dir":"Articles","previous_headings":"","what":"Centrality measures","title":"How To Use This Package","text":"calculate degree centrality every node network plot histogram values. drawback network trimmed obtaining average 4 links per edge (arcs per node), therefore computation histograms reflect biased distribution. way, can compute betweenness, cloness eigenvector centrality networks. Following analysis, can verify largest connected component original networks case.","code":"deg_country <- degree(net$network_country) deg_product <- degree(net$network_product)  # country with the highest degree centrality deg_country[which.max(deg_country)] ## svn  ##  25 # product with the highest degree centrality deg_product[which.max(deg_product)] ## 8421  ##   33 bet_country <- betweenness(net$network_country) bet_product <- betweenness(net$network_product)  clo_country <- closeness(net$network_country) clo_product <- closeness(net$network_product)  eig_country <- eigen_centrality(net$network_country)$vector eig_product <- eigen_centrality(net$network_product)$vector  # country with the highest betweenness centrality bet_country[which.max(bet_country)] ##   ken  ## 16718 # product with the highest betweenness centrality bet_product[which.max(bet_product)] ##    7412  ## 53858.5 # country with the highest closeness centrality clo_country[which.max(clo_country)] ##         ken  ## 0.002555277 # product with the highest closeness centrality clo_product[which.max(clo_product)] ##         7412  ## 0.0005298341 # country with the highest eigenvector centrality eig_country[which.max(eig_country)] ## cze  ##   1 # product with the highest eigenvector centrality eig_product[which.max(eig_product)] ## 8434  ##    1 # sub-networks of the largest connected component  lcc_countries <- induced_subgraph(   net$network_country,   which(components(net$network_country)$membership ==     which.max(components(net$network_country)$csize)) )  lcc_products <- induced_subgraph(   net$network_product,   which(components(net$network_product)$membership ==     which.max(components(net$network_product)$csize)) )  # is this the same as the original networks?  ecount(lcc_countries) == ecount(net$network_country) ## [1] TRUE vcount(lcc_countries) == vcount(net$network_product) ## [1] FALSE deg2_countries <- degree(lcc_countries) deg2_products <- degree(lcc_products)  bet2_countries <- betweenness(lcc_countries) bet2_products <- betweenness(lcc_products)  clo2_countries <- closeness(lcc_countries) clo2_products <- closeness(lcc_products)  eig2_countries <- eigen_centrality(lcc_countries)$vector eig2_products <- eigen_centrality(lcc_products)$vector  all.equal(   deg_country[which.max(deg_country)],   deg2_countries[which.max(deg2_countries)] ) ## [1] TRUE all.equal(   deg_product[which.max(deg_product)],   deg2_products[which.max(deg2_products)] ) ## [1] TRUE all.equal(   bet_country[which.max(bet_country)],   bet2_countries[which.max(bet2_countries)] ) ## [1] TRUE all.equal(   bet_product[which.max(bet_product)],   bet2_products[which.max(bet2_products)] ) ## [1] TRUE all.equal(   clo_country[which.max(clo_country)],   clo2_countries[which.max(clo2_countries)] ) ## [1] TRUE all.equal(   clo_product[which.max(clo_product)],   clo2_products[which.max(clo2_products)] ) ## [1] TRUE all.equal(   eig_country[which.max(eig_country)],   eig2_countries[which.max(eig2_countries)] ) ## [1] TRUE all.equal(   eig_product[which.max(eig_product)],   eig2_products[which.max(eig2_products)] ) ## [1] TRUE"},{"path":"/articles/economiccomplexity.html","id":"k-core-and-backbone","dir":"Articles","previous_headings":"","what":"K-core and backbone","title":"How To Use This Package","text":"can identify k-core networks arbitray value “k”. can also identify backbone networks.","code":"k <- 4  # identify the core of the network core_country <- coreness(net$network_country, mode = \"all\") core_product <- coreness(net$network_product, mode = \"all\")  # identify the nodes in the core kcore_country <- induced_subgraph(   net$network_country,   which(core_country >= k) )  kcore_product <- induced_subgraph(   net$network_product,   which(core_product >= k) )  V(kcore_country)$name ##  [1] \"aut\" \"bel\" \"bgr\" \"bih\" \"blr\" \"che\" \"chn\" \"cze\" \"deu\" \"dnk\" \"esp\" \"est\" ## [13] \"fin\" \"fra\" \"gbr\" \"grc\" \"hkg\" \"hrv\" \"hun\" \"ind\" \"ita\" \"jpn\" \"ken\" \"lbn\" ## [25] \"ltu\" \"mkd\" \"nld\" \"pak\" \"pol\" \"prt\" \"rom\" \"scg\" \"svk\" \"svn\" \"swe\" \"tur\" ## [37] \"ukr\" \"usa\" V(kcore_product)$name ##   [1] \"0142\" \"0223\" \"0240\" \"0252\" \"0484\" \"0565\" \"0583\" \"0586\" \"0620\" \"0730\" ##  [11] \"0980\" \"5332\" \"5334\" \"5335\" \"5417\" \"5419\" \"5542\" \"5543\" \"5821\" \"5825\" ##  [21] \"5989\" \"6123\" \"6210\" \"6289\" \"6343\" \"6354\" \"6359\" \"6416\" \"6417\" \"6418\" ##  [31] \"6421\" \"6422\" \"6424\" \"6428\" \"6518\" \"6546\" \"6575\" \"6581\" \"6583\" \"6584\" ##  [41] \"6589\" \"6618\" \"6631\" \"6632\" \"6633\" \"6635\" \"6648\" \"6794\" \"6911\" \"6912\" ##  [51] \"6921\" \"6924\" \"6940\" \"6954\" \"6973\" \"6975\" \"6991\" \"6996\" \"6997\" \"6998\" ##  [61] \"7139\" \"7211\" \"7212\" \"7213\" \"7219\" \"7259\" \"7269\" \"7281\" \"7368\" \"7369\" ##  [71] \"7371\" \"7372\" \"7412\" \"7413\" \"7416\" \"7423\" \"7429\" \"7432\" \"7436\" \"7439\" ##  [81] \"7449\" \"7452\" \"7492\" \"7493\" \"7499\" \"7711\" \"7732\" \"7742\" \"7757\" \"7758\" ##  [91] \"7783\" \"7810\" \"7821\" \"7849\" \"7868\" \"7919\" \"8121\" \"8122\" \"8211\" \"8212\" ## [101] \"8219\" \"8421\" \"8422\" \"8423\" \"8424\" \"8429\" \"8431\" \"8432\" \"8433\" \"8434\" ## [111] \"8435\" \"8439\" \"8441\" \"8442\" \"8443\" \"8451\" \"8452\" \"8459\" \"8461\" \"8462\" ## [121] \"8463\" \"8464\" \"8465\" \"8472\" \"8510\" \"8720\" \"8742\" \"8922\" \"8931\" \"8932\" ## [131] \"8939\" \"8997\" # identify the backbone of the network bbn_country <- delete_vertices(net$network_country, which(core_country < k)) bbn_product <- delete_vertices(net$network_product, which(core_product < k))  bbn_country ## IGRAPH 785e267 UNW- 38 283 --  ## + attr: name (v/c), weight (e/n) ## + edges from 785e267 (vertex names): ##  [1] swe--usa svn--usa svn--tur svn--swe svk--usa svk--swe svk--svn scg--ukr ##  [9] scg--tur scg--svn scg--svk rom--ukr rom--tur rom--svn rom--svk rom--scg ## [17] prt--tur prt--svn prt--svk prt--scg prt--rom pol--usa pol--tur pol--swe ## [25] pol--svn pol--svk pol--scg pol--rom pol--prt pak--tur nld--usa nld--swe ## [33] nld--svk mkd--tur mkd--scg mkd--rom mkd--prt mkd--pak ltu--ukr lbn--tur ## [41] lbn--mkd ken--tur ken--scg ken--lbn jpn--usa jpn--swe jpn--svn ita--usa ## [49] ita--tur ita--swe ita--svn ita--svk ita--prt ita--pol ita--nld ita--jpn ## [57] ind--tur ind--scg ind--rom ind--pak ind--ken ind--ita hun--usa hun--tur ## + ... omitted several edges bbn_product ## IGRAPH 429e21d UNW- 132 709 --  ## + attr: name (v/c), weight (e/n) ## + edges from 429e21d (vertex names): ##  [1] 8922--8932 8720--8939 8720--8742 8472--8997 8465--8510 8465--8472 ##  [7] 8464--8472 8464--8465 8463--8510 8463--8472 8463--8465 8463--8464 ## [13] 8462--8472 8462--8465 8462--8464 8462--8463 8461--8472 8461--8465 ## [19] 8461--8463 8459--8472 8459--8465 8459--8464 8459--8463 8459--8462 ## [25] 8452--8472 8452--8465 8452--8464 8452--8463 8452--8462 8452--8461 ## [31] 8452--8459 8451--8997 8451--8472 8451--8465 8451--8464 8451--8463 ## [37] 8451--8462 8451--8459 8451--8452 8443--8997 8443--8472 8443--8465 ## [43] 8443--8464 8443--8463 8443--8462 8443--8459 8443--8452 8443--8451 ## + ... omitted several edges"},{"path":"/articles/economiccomplexity.html","id":"community-detection","dir":"Articles","previous_headings":"","what":"Community detection","title":"How To Use This Package","text":"can identify communities networks fast greedy algorithm.","code":"com_country <- cluster_fast_greedy(net$network_country) com_product <- cluster_fast_greedy(net$network_product)  all.equal(vcount(net$network_country), length(com_country$membership)) ## [1] TRUE all.equal(vcount(net$network_product), length(com_product$membership)) ## [1] TRUE # number of communities length(unique(com_country$membership)) ## [1] 12 length(unique(com_product$membership)) ## [1] 41"},{"path":"/articles/economiccomplexity.html","id":"complexity-outlook","dir":"Articles","previous_headings":"","what":"Complexity Outlook","title":"How To Use This Package","text":"Complexity Outlook Index Complexity Outlook Gain obtained complexity_outlook() function.","code":"co <- complexity_outlook(   economiccomplexity_output$balassa_index,   economiccomplexity_output$proximity$proximity_product,   economiccomplexity_output$complexity_measures$complexity_index_product )  # partial view of complexity outlook co$complexity_outlook_index[n] ##        afg        ago        aia        alb        and  ## 103.948610   9.962401 122.311158 152.107317 151.295380 co$complexity_outlook_gain[n, n] ##          0011      0012      0013      0014      0015 ## afg 0.8615531 0.7613878 0.7537907 1.0961458 0.8143851 ## ago 0.9681802 0.8436855 0.8219918 1.2151040 0.8883146 ## aia 0.8339114 0.7475080 0.7247198 1.0425043 0.7671877 ## alb 0.7979779 0.7199705 0.7132042 1.0170093 0.7636545 ## and 0.0000000 0.7118512 0.6829531 0.9987236 0.0000000"},{"path":"/articles/economiccomplexity.html","id":"productivy-levels","dir":"Articles","previous_headings":"","what":"Productivy Levels","title":"How To Use This Package","text":"productivity_levels() dataset follows definitions Hausmann et al. (2014) Hausmann, Hwang, Rodrik (2005). don’t per-capita GDP dataset Galactic Federation, ’ll create simulated data example.","code":"pl <- productivity_levels(   world_trade_avg_1998_to_2000,   world_gdp_avg_1998_to_2000 )  # partial view of productivity levels pl$productivity_level_country[n] ##       ago       alb       and       are       arg  ##  8223.607  6343.341 13783.485 10207.679  9269.670 pl$productivity_level_product[n] ##      0011      0012      0013      0014      0015  ##  7915.893  3986.371 11375.710  6273.428 17628.950"},{"path":"/articles/economiccomplexity.html","id":"integration-with-ggplot2","dir":"Articles","previous_headings":"","what":"Integration with ggplot2","title":"How To Use This Package","text":"can plot distributions centrality measures.","code":"library(ggplot2)  deg_country <- data.frame(   country = names(deg_country),   deg = deg_country )  deg_product <- data.frame(   product = names(deg_product),   deg = deg_product )  ggplot(deg_country) +   geom_histogram(aes(x = deg), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Degree Centrality Distribution for Countries\") ggplot(deg_product) +   geom_histogram(aes(x = deg), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Degree Centrality Distribution for Products\") bet_country <- data.frame(   country = names(bet_country),   bet = bet_country )  bet_product <- data.frame(   product = names(bet_product),   bet = bet_product )  clo_country <- data.frame(   country = names(clo_country),   clo = clo_country )  clo_product <- data.frame(   product = names(clo_product),   clo = clo_product )  eig_country <- data.frame(   country = names(eig_country),   eig = eig_country )  eig_product <- data.frame(   product = names(eig_product),   eig = eig_product )  ggplot(bet_country) +   geom_histogram(aes(x = bet), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Betweenness Centrality Distribution for Countries\") ggplot(bet_product) +   geom_histogram(aes(x = bet), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Betweenness Centrality Distribution for Products\") ggplot(clo_country) +   geom_histogram(aes(x = clo), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Closeness Centrality Distribution for Countries\") ggplot(clo_product) +   geom_histogram(aes(x = clo), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Closeness Centrality Distribution for Products\") ggplot(eig_country) +   geom_histogram(aes(x = eig), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Eigenvector Centrality Distribution for Countries\") ggplot(eig_product) +   geom_histogram(aes(x = eig), bins = 20, fill = \"#002948\") +   theme_minimal(base_size = 13) +   labs(title = \"Eigenvector Centrality Distribution for Products\")"},{"path":"/articles/economiccomplexity.html","id":"integration-with-ggraph","dir":"Articles","previous_headings":"","what":"Integration with ggraph","title":"How To Use This Package","text":"start plotting network countries. node sized total exports.  Now can highlight countries highest centralities previous part.  can also plot network products. node sized total exports. product names large, display product codes instead. can read codes need codes R, can use tradestatistics package, can installed CRAN.  Now can highlight products highest centralities previous part.  communities detected previous part can used improve plots.  products, challenge obtain 41 distinguisable colors.  can try obtain clusters different way, pre-specifying number communities. arbitrary element, can specify number equal sections Harmonised System, 21 plus unspecified products.","code":"set.seed(200100)  library(ggraph)  aggregated_countries <- aggregate(   world_trade_avg_1998_to_2000$value,   by = list(country = world_trade_avg_1998_to_2000$country),   FUN = sum )  aggregated_countries <- setNames(   aggregated_countries$x,   aggregated_countries$country )  V(net$network_country)$size <- aggregated_countries[   match(V(net$network_country)$name,   names(aggregated_countries)) ]  ggraph(net$network_country, layout = \"kk\") +   # geom_edge_link(aes(edge_width = weight), edge_colour = \"#a8a8a8\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size), color = \"#002948\") +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Countries\") +   theme_void() # Paint svn, ken and cze in yellow and the rest of the world in blue  V(net$network_country)$color <- rep(   \"Rest of the World\",   length(V(net$network_country)$size) ) V(net$network_country)$color[match(   c(\"svn\", \"ken\", \"cze\"),   V(net$network_country)$name )] <- \"Slovakia, Kenia and Czech Republic\"  ggraph(net$network_country, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size, color = color)) +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Countries\") +   theme_void() +   scale_colour_manual(values = c(     \"Slovakia, Kenia and Czech Republic\" = \"#fac704\",     \"Rest of the World\" = \"#002948\"   )) set.seed(200100)  aggregated_products <- aggregate(   world_trade_avg_1998_to_2000$value,   by = list(country = world_trade_avg_1998_to_2000$product),   FUN = sum )  aggregated_products <- setNames(   aggregated_products$x,   aggregated_products$country )  V(net$network_product)$size <- aggregated_products[   match(V(net$network_product)$name,   names(aggregated_products)) ]  ggraph(net$network_product, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size), color = \"#002948\") +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Products\") +   theme_void() # Paint 8421, 7412 and 8434 in yellow and the rest of the products in blue  V(net$network_product)$color <- rep(   \"Rest of the Products\",   length(V(net$network_product)$size) ) V(net$network_product)$color[match(   c(\"8421\", \"7412\", \"8434\"),   V(net$network_product)$name )] <- \"8421, 7412 and 8434\"  ggraph(net$network_product, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size, color = color)) +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Products\") +   theme_void() +   scale_colour_manual(values = c(     \"8421, 7412 and 8434\" = \"#fac704\",     \"Rest of the Products\" = \"#002948\"   )) # Paint by community # for each vertex, replace X with the community number  set.seed(200100)  V(net$network_country)$color2 <- rep(NA, length(V(net$network_country)$size))  for (i in seq_along(V(net$network_country)$color2)) {   com_i <- as.character(com_country$membership[i])    # if len(com$membership[i]) = 1, append a 0   if (nchar(com_i) == 1) {     com_i <- paste0(\"0\", com_i)   }    V(net$network_country)$color2[i] <- paste0(\"Community \", com_i) }  my_colors <- c(   \"#74c0e2\", \"#406662\", \"#549e95\", \"#8abdb6\", \"#bcd8af\",   \"#a8c380\", \"#ede788\", \"#d6c650\", \"#dc8e7a\", \"#d05555\",   \"#bf3251\", \"#872a41\" )  ggraph(net$network_country, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size, color = color2)) +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Countries\") +   theme_void() +   scale_colour_manual(values = my_colors) # Paint by community # for each vertex, replace X with the community number  set.seed(200100)  V(net$network_product)$color2 <- rep(NA, length(V(net$network_product)$size))  for (i in seq_along(V(net$network_product)$color2)) {   com_i <- as.character(com_product$membership[i])    # if len(com$membership[i]) = 1, append a 0   if (nchar(com_i) == 1) {     com_i <- paste0(\"0\", com_i)   }    V(net$network_product)$color2[i] <- paste0(\"Community \", com_i) }  my_colors_2 <- c(   \"#74c0e2\", \"#406662\", \"#549e95\", \"#8abdb6\", \"#bcd8af\",   \"#a8c380\", \"#ede788\", \"#d6c650\", \"#dc8e7a\", \"#d05555\",   \"#bf3251\", \"#872a41\", \"#74c0e2\", \"#406662\", \"#549e95\",   \"#8abdb6\", \"#bcd8af\", \"#a8c380\", \"#ede788\", \"#d6c650\",   \"#dc8e7a\", \"#d05555\", \"#bf3251\", \"#872a41\", \"#74c0e2\",   \"#406662\", \"#549e95\", \"#8abdb6\", \"#bcd8af\", \"#a8c380\",   \"#ede788\", \"#d6c650\", \"#dc8e7a\", \"#d05555\", \"#bf3251\",   \"#872a41\", \"#74c0e2\", \"#406662\", \"#549e95\", \"#8abdb6\",   \"#bcd8af\" )  ggraph(net$network_product, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size, color = color2)) +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Products\") +   theme_void() +   scale_colour_manual(values = my_colors_2) set.seed(200100)  my_colors_3 <- c(   \"#74c0e2\", \"#406662\", \"#549e95\", \"#8abdb6\", \"#bcd8af\",   \"#a8c380\", \"#ede788\", \"#d6c650\", \"#dc8e7a\", \"#d05555\",   \"#bf3251\", \"#872a41\", \"#993f7b\", \"#7454a6\", \"#a17cb0\",   \"#d1a1bc\", \"#a1aafb\", \"#5c57d9\", \"#1c26b3\", \"#4d6fd0\",   \"#7485aa\", \"#d3d3d3\" )  com_product <- cluster_fluid_communities(   net$network_product,   no.of.communities = 22 )  V(net$network_product)$color2 <- rep(NA, length(V(net$network_product)$size))  for (i in seq_along(V(net$network_product)$color2)) {   com_i <- as.character(com_product$membership[i])    # if len(com$membership[i]) = 1, append a 0   if (nchar(com_i) == 1) {     com_i <- paste0(\"0\", com_i)   }    V(net$network_product)$color2[i] <- paste0(\"Community \", com_i) }  ggraph(net$network_product, layout = \"kk\") +   geom_edge_link(edge_colour = \"#a8a8a8\") +   geom_node_point(aes(size = size, color = color2)) +   geom_node_text(aes(label = name), size = 2, vjust = 2.2) +   ggtitle(\"Proximity Based Network Projection for Products\") +   theme_void() +   scale_colour_manual(values = my_colors_3)"},{"path":"/articles/economiccomplexity.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"How To Use This Package","text":"Hausmann, Ricardo, César Hidalgo, Sebastián Bustos, Michele Coscia, Alexander Simoes, Muhammed Yildirim. 2014. Atlas Economic Complexity: Mapping Paths Prosperity. MIT Press. https://doi.org/10.7551/mitpress/9647.001.0001. Hausmann, Ricardo, Jason Hwang, Dani Rodrik. 2005. “Export Matters.” Working Paper 11905. Working Paper Series. National Bureau Economic Research. https://doi.org/10.3386/w11905. Mariani, Manuel, Alexandre Vidmer, Matsúš Medo, Yi-Cheng Zhang. 2015. “Measuring Economic Complexity Countries Products: Metric Use?” European Physical Journal B 88 (11): 293. https://doi.org/10.1140/epjb/e2015-60298-7.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauricio Vargas Sepulveda. Author, maintainer, copyright holder. Carlo Bottai. Contributor.           improved eigenvalues calculation Diego Kozlowski. Contributor.           provided initial RCA function used v0.2.4 Nico Pintar. Reviewer.           suggested improvements special cases eigenvalues       calculation World Bank. Data contributor.           World GDP per capita dataset Open Trade Statistics. Data contributor.           World Trade dataset","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vargas Sepulveda M (2024). economiccomplexity: Computational Methods Economic Complexity. R package version 2.0.0, https://pacha.dev/economiccomplexity/.","code":"@Manual{,   title = {economiccomplexity: Computational Methods for Economic Complexity},   author = {Mauricio {Vargas Sepulveda}},   year = {2024},   note = {R package version 2.0.0},   url = {https://pacha.dev/economiccomplexity/}, }"},{"path":"/index.html","id":"economiccomplexity-","dir":"","previous_headings":"","what":"Computational Methods for Economic Complexity","title":"Computational Methods for Economic Complexity","text":"wrapper different methods Linear Algebra equations introduced Atlas Economic Complexity related literature. package provides standard matrix graph output can used seamlessly packages. See doi:10.21105/joss.01866 summary methods evolution literature. references work Mariani, et al. (2015) doi:10.1140/epjb/e2015-60298-7, Hausmann, et al. (2014) doi:10.7551/mitpress/9647.001.0001, Hausmann, et al. (2005) doi:10.3386/w11905.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Computational Methods for Economic Complexity","text":"","code":"# Install stable version from CRAN install.packages(\"economiccomplexity\")  # Install development version from GitHub devtools::install_github(\"pachadotdev/economiccomplexity\")"},{"path":"/index.html","id":"community-guidelines","dir":"","previous_headings":"","what":"Community Guidelines","title":"Computational Methods for Economic Complexity","text":"want contribute software, report issues problems software, please fork repo send Pull Request open issue. ’m happy receive ideas best coordinate efforts improve package without reinventing wheel. seek support questions can start thread issues section, can email prefer open issues probably users questions .","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Computational Methods for Economic Complexity","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/reference/balassa_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Balassa Index — balassa_index","title":"Balassa Index — balassa_index","text":"balassa_index() computes Balassa Index bipartite relation countries products.","code":""},{"path":"/reference/balassa_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balassa Index — balassa_index","text":"","code":"balassa_index(   trade_data,   discrete = TRUE,   cutoff = 1,   country = \"country\",   product = \"product\",   value = \"value\" )"},{"path":"/reference/balassa_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balassa Index — balassa_index","text":"trade_data (Type: data.frame matrix) dataset world_gdp_avg_1998_to_2000 containing countries, products exported  values. discrete (Type: logical) whether converting Balassa Index discrete (0/1) values. Anything specified cutoff converted 0 1 otherwise. default set TRUE. cutoff (Type: numeric) cutoff use discretization. default set 1. country (Type: character) column countries. default set \"country\". Used input  data.frame. product (Type: character) column products. default set \"product\". Used input  data.frame. value (Type: character) column metric country-product pairs. default set \"value\". Used input  data.frame.","code":""},{"path":"/reference/balassa_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balassa Index — balassa_index","text":"matrix Balassa Index.","code":""},{"path":"/reference/balassa_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balassa Index — balassa_index","text":"current implementation follows (Mariani et al. 2015)  obtain metric specialisation. context international trade, Balassa Index country-product pair 1, means country specialized product. input function data.frame instead matrix, function shall aggregate data convert input matrix.","code":""},{"path":"/reference/balassa_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balassa Index — balassa_index","text":"information see: Mariani M, Vidmer , Medo M, Zhang Y (2015). “Measuring economic complexity countries products: metric use?” European Physical Journal B, 88(11), 293. doi:10.1140/epjb/e2015-60298-7 . references therein.","code":""},{"path":"/reference/balassa_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balassa Index — balassa_index","text":"","code":"bi <- balassa_index(world_trade_avg_1998_to_2000)  # partial view of index n <- seq_len(5) bi[n, n] #>     0011 0012 0013 0014 0015 #> afg    0    0    0    0    0 #> ago    0    0    0    0    0 #> aia    0    0    0    0    0 #> alb    0    0    0    0    0 #> and    1    0    0    0    1"},{"path":"/reference/complexity_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Complexity Measures — complexity_measures","title":"Complexity Measures — complexity_measures","text":"complexity_measures() computes Economic Complexity Index Product Complexity Index.","code":""},{"path":"/reference/complexity_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complexity Measures — complexity_measures","text":"","code":"complexity_measures(   balassa_index,   method = \"fitness\",   iterations = 20,   extremality = 1 )"},{"path":"/reference/complexity_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complexity Measures — complexity_measures","text":"balassa_index (Type: matrix) output balassa_index()) equivalent arrangement. method (Type: character) one methods: fitness, reflections eigenvalues. default set \"fitness\". iterations (Type: numeric) number iterations use. default set 20. extremality (Type: numeric) parameter use fitness method. methods use parameter. default set 1.","code":""},{"path":"/reference/complexity_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complexity Measures — complexity_measures","text":"list two named numeric vectors.","code":""},{"path":"/reference/complexity_measures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complexity Measures — complexity_measures","text":"current implementation follows (Mariani et al. 2015)  obtain different alternatives account diversification bipartite relations.","code":""},{"path":"/reference/complexity_measures.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Complexity Measures — complexity_measures","text":"information index see: Mariani M, Vidmer , Medo M, Zhang Y (2015). “Measuring economic complexity countries products: metric use?” European Physical Journal B, 88(11), 293. doi:10.1140/epjb/e2015-60298-7 . references therein.","code":""},{"path":"/reference/complexity_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complexity Measures — complexity_measures","text":"","code":"co <- complexity_measures(economiccomplexity_output$balassa_index)  # partial view of indexes n <- seq_len(5) co$complexity_index_country[n] #>        afg        ago        aia        alb        and  #> 0.78605655 0.03999516 1.05645538 1.24261128 1.37321261  co$complexity_index_product[n] #>      0011      0012      0013      0014      0015  #> 0.7538883 0.7491391 2.3018690 0.9903918 1.3120378"},{"path":"/reference/complexity_outlook.html","id":null,"dir":"Reference","previous_headings":"","what":"Complexity Outlook — complexity_outlook","title":"Complexity Outlook — complexity_outlook","text":"complexity_outlook() computes Complexity Outlook Index Complexity Outlook Gain.","code":""},{"path":"/reference/complexity_outlook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complexity Outlook — complexity_outlook","text":"","code":"complexity_outlook(balassa_index, proximity_product, complexity_index_product)"},{"path":"/reference/complexity_outlook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complexity Outlook — complexity_outlook","text":"balassa_index (Type: matrix) output balassa_index()) equivalent arrangement. proximity_product (Type: matrix) output proximity()) equivalent arrangement. complexity_index_product (Type: numeric) output complexity_measures()) equivalent arrangement.","code":""},{"path":"/reference/complexity_outlook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complexity Outlook — complexity_outlook","text":"list two named numeric vectors.","code":""},{"path":"/reference/complexity_outlook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complexity Outlook — complexity_outlook","text":"current implementation follows (Hausmann et al. 2014)  measure unexploited export oppportunities.","code":""},{"path":"/reference/complexity_outlook.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Complexity Outlook — complexity_outlook","text":"information index see: Hausmann R, Hidalgo C, Bustos S, Coscia M, Simoes , Yildirim M (2014). atlas economic complexity: Mapping paths prosperity. MIT Press. doi:10.7551/mitpress/9647.001.0001 . references therein.","code":""},{"path":"/reference/complexity_outlook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complexity Outlook — complexity_outlook","text":"","code":"co <- complexity_outlook(   economiccomplexity_output$balassa_index,   economiccomplexity_output$proximity$proximity_product,   economiccomplexity_output$complexity_measures$complexity_index_product )  # partial view of complexity outlook n <- seq_len(5) co$complexity_outlook_index[n] #>        afg        ago        aia        alb        and  #> 103.948610   9.962401 122.311158 152.107317 151.295380  co$complexity_outlook_gain[n, n] #>          0011      0012      0013      0014      0015 #> afg 0.8615531 0.7613878 0.7537907 1.0961458 0.8143851 #> ago 0.9681802 0.8436855 0.8219918 1.2151040 0.8883146 #> aia 0.8339114 0.7475080 0.7247198 1.0425043 0.7671877 #> alb 0.7979779 0.7199705 0.7132042 1.0170093 0.7636545 #> and 0.0000000 0.7118512 0.6829531 0.9987236 0.0000000"},{"path":"/reference/country_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"country aggregation — country_aggregation","title":"country aggregation — country_aggregation","text":"country aggregation","code":""},{"path":"/reference/country_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"country aggregation — country_aggregation","text":"","code":"country_aggregation(dataframe, country = \"country\", value = \"value\")"},{"path":"/reference/country_product_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"country-product aggregation — country_product_aggregation","title":"country-product aggregation — country_product_aggregation","text":"country-product aggregation","code":""},{"path":"/reference/country_product_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"country-product aggregation — country_product_aggregation","text":"","code":"country_product_aggregation(   dataframe,   country = \"country\",   product = \"product\",   value = \"value\" )"},{"path":"/reference/dataframe_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe to matrix — dataframe_to_matrix","title":"Dataframe to matrix — dataframe_to_matrix","text":"Dataframe matrix","code":""},{"path":"/reference/dataframe_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe to matrix — dataframe_to_matrix","text":"","code":"dataframe_to_matrix(   dataframe,   country = \"country\",   product = \"product\",   value = \"value\" )"},{"path":"/reference/density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density — density","title":"Density — density","text":"density() computes density matrix accounts weighted proportions products connected good countries exporting.","code":""},{"path":"/reference/density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density — density","text":"","code":"density(balassa_index, proximity_product)"},{"path":"/reference/density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density — density","text":"balassa_index (Type: matrix) output balassa_index()) equivalent arrangement. proximity_product (Type: matrix) output proximity()) equivalent arrangement.","code":""},{"path":"/reference/density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density — density","text":"matrix.","code":""},{"path":"/reference/density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density — density","text":"current implementation follows (Hausmann et al. 2014)  measure oppotunities implied country's position.","code":""},{"path":"/reference/density.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Density — density","text":"information index see: Hausmann R, Hidalgo C, Bustos S, Coscia M, Simoes , Yildirim M (2014). atlas economic complexity: Mapping paths prosperity. MIT Press. doi:10.7551/mitpress/9647.001.0001 . references therein.","code":""},{"path":"/reference/density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density — density","text":"","code":"d <- density(   economiccomplexity_output$balassa_index,   economiccomplexity_output$proximity$proximity_product )  # partial view of the density matrix n <- seq_len(5) d[n, n] #>           0011       0012      0013       0014       0015 #> afg 0.16689576 0.17378847 0.1414189 0.15075914 0.14556406 #> ago 0.01474693 0.01543965 0.0111554 0.01217709 0.01240472 #> aia 0.17902020 0.16726547 0.1688524 0.18488279 0.18946228 #> alb 0.26578601 0.25458634 0.2278275 0.25202762 0.23219603 #> and 0.26138713 0.22934698 0.2312170 0.23978684 0.27186394"},{"path":"/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance — distance","title":"Distance — distance","text":"distance() computes distance matrix accounts weighted proportions products connected good countries exporting.","code":""},{"path":"/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance — distance","text":"","code":"distance(balassa_index, proximity_product)"},{"path":"/reference/distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance — distance","text":"balassa_index (Type: matrix) output balassa_index()) equivalent arrangement. proximity_product (Type: matrix) output proximity()) equivalent arrangement.","code":""},{"path":"/reference/distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance — distance","text":"matrix.","code":""},{"path":"/reference/distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance — distance","text":"current implementation follows (Hausmann et al. 2014)  measure oppotunities implied country's position.","code":""},{"path":"/reference/distance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance — distance","text":"information index see: Hausmann R, Hidalgo C, Bustos S, Coscia M, Simoes , Yildirim M (2014). atlas economic complexity: Mapping paths prosperity. MIT Press. doi:10.7551/mitpress/9647.001.0001 . references therein.","code":""},{"path":"/reference/distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance — distance","text":"","code":"d <- distance(   economiccomplexity_output$balassa_index,   economiccomplexity_output$proximity$proximity_product )  # partial view of the distance matrix n <- seq_len(5) d[n, n] #>          0011      0012      0013      0014      0015 #> afg 0.8331042 0.8262115 0.8585811 0.8492409 0.8544359 #> ago 0.9852531 0.9845604 0.9888446 0.9878229 0.9875953 #> aia 0.8209798 0.8327345 0.8311476 0.8151172 0.8105377 #> alb 0.7342140 0.7454137 0.7721725 0.7479724 0.7678040 #> and 0.7386129 0.7706530 0.7687830 0.7602132 0.7281361"},{"path":"/reference/economiccomplexity-package.html","id":null,"dir":"Reference","previous_headings":"","what":"economiccomplexity: Computational Methods for Economic Complexity — economiccomplexity-package","title":"economiccomplexity: Computational Methods for Economic Complexity — economiccomplexity-package","text":"wrapper different methods Linear Algebra equations introduced Atlas Economic Complexity related literature. package provides standard matrix graph output can used seamlessly packages. See doi:10.21105/joss.01866  summary methods evolution literature.","code":""},{"path":[]},{"path":"/reference/economiccomplexity-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"economiccomplexity: Computational Methods for Economic Complexity — economiccomplexity-package","text":"Maintainer: Mauricio Vargas Sepulveda m.sepulveda@mail.utoronto.ca (ORCID) [copyright holder] contributors: Carlo Bottai (improved eigenvalues calculation) [contributor] Diego Kozlowski (provided initial RCA function used v0.2.4) [contributor] Nico Pintar (suggested improvements special cases eigenvalues calculation) [reviewer] World Bank (World GDP per capita dataset) [data contributor] Open Trade Statistics (World Trade dataset) [data contributor]","code":""},{"path":"/reference/productivity_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Productivity Levels — productivity_levels","title":"Productivity Levels — productivity_levels","text":"productivity_levels() computes EXPY PRODY measures.","code":""},{"path":"/reference/productivity_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Productivity Levels — productivity_levels","text":"","code":"productivity_levels(   data_exp,   data_gdp,   country = \"country\",   product = \"product\",   value = \"value\" )"},{"path":"/reference/productivity_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Productivity Levels — productivity_levels","text":"data_exp (Type: data.frame, matrix matrix) dataset containing countries, products exported values. data_gdp (Type: data.frame, matrix matrix) dataset containing countries per-capita GDP values. country (Type: character) column countries. default set \"country\". Used input  data.frame. product (Type: character) column products. default set \"product\". Used input  data.frame. value (Type: character) column metric  country-product pairs. default set \"value\". Used input  data.frame.","code":""},{"path":"/reference/productivity_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Productivity Levels — productivity_levels","text":"list two named numeric vectors.","code":""},{"path":"/reference/productivity_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Productivity Levels — productivity_levels","text":"current implementation follows (Hausmann et al. 2005)  obtain productivity income levels associated exports.","code":""},{"path":"/reference/productivity_levels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Productivity Levels — productivity_levels","text":"information prody applications see: Hausmann R, Hwang J, Rodrik D (2005). “Export Matters.” Working Paper 11905, National Bureau Economic Research. doi:10.3386/w11905 .","code":""},{"path":"/reference/productivity_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Productivity Levels — productivity_levels","text":"","code":"pl <- productivity_levels(   world_trade_avg_1998_to_2000,   world_gdp_avg_1998_to_2000 ) #> Warning: 'data_exp' and 'data_gdp' don't have the same countries, some elements will be dropped  # partial view of productivity levels n <- seq_len(5) pl$productivity_level_country[n] #>       ago       alb       and       are       arg  #>  8223.607  6343.341 13783.485 10207.679  9269.670  pl$productivity_level_product[n] #>      0011      0012      0013      0014      0015  #>  7915.893  3986.371 11375.710  6273.428 17628.950"},{"path":"/reference/projections.html","id":null,"dir":"Reference","previous_headings":"","what":"Projections of a Country-Product Network — projections","title":"Projections of a Country-Product Network — projections","text":"projections() computes two graphs particularly useful visualize product-product country-country similarity.","code":""},{"path":"/reference/projections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projections of a Country-Product Network — projections","text":"","code":"projections(   proximity_country,   proximity_product,   avg_links = 5,   tolerance = 0.05,   compute = \"both\" )"},{"path":"/reference/projections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projections of a Country-Product Network — projections","text":"proximity_country (Type: matrix) output proximity()) equivalent arrangement. proximity_product (Type: matrix) output proximity()) equivalent arrangement. avg_links average number connections projections. default set 5. tolerance tolerance proximity variation iteration obtaining desired average number connections. default set 0.05. compute (Type: character) proximity compute. default \"\" (projections) can also \"country\" \"product\".","code":""},{"path":"/reference/projections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projections of a Country-Product Network — projections","text":"list two graphs.","code":""},{"path":"/reference/projections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Projections of a Country-Product Network — projections","text":"current implementation follows (Hausmann et al. 2014)  create simplified graphs correspond simplification proximity matrices. result obtained iterating reducing links desired average number links per node obtained, spaning tree strongest links returned possible return desired network.","code":""},{"path":"/reference/projections.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Projections of a Country-Product Network — projections","text":"information see: Hausmann R, Hidalgo C, Bustos S, Coscia M, Simoes , Yildirim M (2014). atlas economic complexity: Mapping paths prosperity. MIT Press. doi:10.7551/mitpress/9647.001.0001 . references therein.","code":""},{"path":"/reference/projections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projections of a Country-Product Network — projections","text":"","code":"net <- projections(   economiccomplexity_output$proximity$proximity_country,   economiccomplexity_output$proximity$proximity_product,   avg_links = 10,   tolerance = 0.1 ) #> computing country projection... #> -------------------------------------------------- #> 0 threshold... #> 0.1 threshold... #> 0.2 threshold... #> 0.3 threshold... #> 0.4 threshold... #> 0.5 threshold achieves the avg number of connections #> computing product projection... #> -------------------------------------------------- #> 0 threshold... #> 0.1 threshold... #> 0.2 threshold... #> 0.3 threshold... #> 0.4 threshold... #> 0.5 threshold... #> 0.6 threshold achieves the avg number of connections  # partial view of projections n <- seq_len(5) igraph::E(net$network_country)[n] #> + 5/478 edges from b213082 (vertex names): #> [1] zaf--zwe tza--zmb tza--uga tuv--wlf tuv--umi igraph::E(net$network_product)[n] #> + 5/1339 edges from 78a4334 (vertex names): #> [1] 8981--8982 8946--9510 8922--8932 8921--8922 8852--8959"},{"path":"/reference/proximity.html","id":null,"dir":"Reference","previous_headings":"","what":"Proximity — proximity","title":"Proximity — proximity","text":"proximity() computes two matrices account similarity pairs countries pairs products.","code":""},{"path":"/reference/proximity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proximity — proximity","text":"","code":"proximity(balassa_index, compute = \"both\")"},{"path":"/reference/proximity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proximity — proximity","text":"balassa_index (Type: matrix) output balassa_index()) equivalent arrangement. compute (Type: character) proximity compute. default \"\" (proximity matrices) can also \"country\" \"product\".","code":""},{"path":"/reference/proximity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proximity — proximity","text":"list two matrices.","code":""},{"path":"/reference/proximity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proximity — proximity","text":"current implementation follows (Hausmann et al. 2014)  obtain likelihood two products \"p1\" \"p2\" exported country , conversely, two countries \"c1\" \"c2\" export product.","code":""},{"path":"/reference/proximity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Proximity — proximity","text":"information see: Hausmann R, Hidalgo C, Bustos S, Coscia M, Simoes , Yildirim M (2014). atlas economic complexity: Mapping paths prosperity. MIT Press. doi:10.7551/mitpress/9647.001.0001 . references therein.","code":""},{"path":"/reference/proximity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proximity — proximity","text":"","code":"pro <- proximity(economiccomplexity_output$balassa_index)  # partial view of proximity matrices n <- seq_len(5) pro$proximity_country[n, n] #>            afg         ago         aia        alb         and #> afg 1.00000000 0.015873016 0.181818182 0.19689119 0.192513369 #> ago 0.01587302 1.000000000 0.006993007 0.01554404 0.005347594 #> aia 0.18181818 0.006993007 1.000000000 0.16580311 0.251336898 #> alb 0.19689119 0.015544041 0.165803109 1.00000000 0.310880829 #> and 0.19251337 0.005347594 0.251336898 0.31088083 1.000000000 pro$proximity_product[n, n] #>           0011      0012      0013      0014      0015 #> 0011 1.0000000 0.3658537 0.1707317 0.2439024 0.2682927 #> 0012 0.3658537 1.0000000 0.2500000 0.2250000 0.2500000 #> 0013 0.1707317 0.2500000 1.0000000 0.2500000 0.1200000 #> 0014 0.2439024 0.2250000 0.2500000 1.0000000 0.2250000 #> 0015 0.2682927 0.2500000 0.1200000 0.2250000 1.0000000"},{"path":"/reference/rca.html","id":null,"dir":"Reference","previous_headings":"","what":"Revealed Comparative Advantage — rca","title":"Revealed Comparative Advantage — rca","text":"balassa_index() replaces function","code":""},{"path":"/reference/rca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revealed Comparative Advantage — rca","text":"","code":"rca(...)"},{"path":"/reference/rca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Revealed Comparative Advantage — rca","text":"... old parameters","code":""}]
